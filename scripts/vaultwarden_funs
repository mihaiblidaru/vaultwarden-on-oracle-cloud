#!/bin/bash

get_tf_prefix () {
    local prefix=$(jq -r '.tf_prefix // "tf"' config.json)
    if [ "$prefix" == "" ]; then
        prefix = "tf"
    fi
    echo "$prefix"
}

vaultwarden_ssh() {
  local login_user=${1:-vaultwarden}
  local tf_prefix=$(get_tf_prefix)
  local vaultwarden_compartment=$(oci iam compartment list --name "${tf_prefix}-vaultwarden-compartment" --query 'data[0].id' --raw-output)
  local instance_id=$(oci compute instance list --compartment-id ${vaultwarden_compartment} --display-name "${tf_prefix}-vaultwarden-on-ubuntu" --lifecycle-state RUNNING --query 'data[0].id' --raw-output)
  local bastion_id=$(oci bastion bastion list --compartment-id ${vaultwarden_compartment} --all --name "${tf_prefix}-vaultwarden-ssh-bastion" --bastion-lifecycle-state ACTIVE --query 'data[0].id' --raw-output)

  local suffix=$(date "+%Y%m%d%H")
  local prev_suffix=$(date -d "-1 hour" "+%Y%m%d%H")

  local managed_session_id=""

  managed_session_id=$(oci bastion session list --bastion-id ${bastion_id} --all --display-name "ssh-managed-session-${login_user}-${prev_suffix}" --session-lifecycle-state ACTIVE --query 'data[0].id' --raw-output)
  TMP_KEY_DIR=/tmp/vaultwarden-managed-ssh-${login_user}-${prev_suffix}/

  if [ "${managed_session_id}" == "" ]; then
    managed_session_id=$(oci bastion session list --bastion-id ${bastion_id} --all --display-name "ssh-managed-session-${login_user}-${suffix}" --session-lifecycle-state ACTIVE --query 'data[0].id' --raw-output)
    TMP_KEY_DIR=/tmp/vaultwarden-managed-ssh-${login_user}-${suffix}/
  fi

  if [ ! -d ${TMP_KEY_DIR} ]; then
    managed_session_id=""
    mkdir -p ${TMP_KEY_DIR}
  fi

  [ ! -f ${TMP_KEY_DIR}/ssh_key.pem ] && ssh-keygen -q -b 4096 -t rsa -f ${TMP_KEY_DIR}/ssh_key.pem -N ""

  if [ "${managed_session_id}" == "" ]; then
    echo -e " \e[33m*\e[0m \e[34mCreating new managed ssh session. This will take some time...\e[0m"
    cat scripts/create_managed_ssh_session.json.template | \
      jq ".bastionId = \"${bastion_id}\"" | \
      jq ".displayName = \"ssh-managed-session-${login_user}-${suffix}\"" | \
      jq ".targetResourceId = \"${instance_id}\"" | \
      jq ".targetOsUsername = \"${login_user}\"" | \
      jq ".sshPublicKeyFile = \"${TMP_KEY_DIR}/ssh_key.pem.pub\"" > ${TMP_KEY_DIR}/create_managed_ssh_session.json

    managed_session_id=$(oci bastion session create-managed-ssh --from-json file://${TMP_KEY_DIR}/create_managed_ssh_session.json --query "data.resources[0].identifier" --raw-output)
  else
    echo -e " \e[33m*\e[0m \e[34mUsing existing managed ssh session\e[0m"
  fi

  local command=$(oci bastion session get --session-id ${managed_session_id} --query 'data."ssh-metadata".command' --raw-output | sed "s|<privateKey>|${TMP_KEY_DIR}/ssh_key.pem|g")
  eval $command
}
